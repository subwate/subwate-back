name: ci-cd.develop

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Execute Permission
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew clean build

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t subwate/spring-app-develop:latest .

      - name: Push Docker Image
        run: |
          docker push subwate/spring-app-develop:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Deploy with Docker Compose
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DB_URL: ${{ secrets.DB_URL_DEVELOP }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key

          ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=10 ubuntu@43.200.133.172 << EOF
            cd /home/ubuntu/subwate-backend/
            export COMPOSE_HTTP_TIMEOUT=300
            export DB_URL=${DB_URL}
            export DB_USERNAME=${DB_USERNAME}
            export DB_PASSWORD=${DB_PASSWORD}
            docker-compose stop spring-app-develop
            docker container prune -f
            docker image prune -a -f
            docker volume prune -f
            docker system prune -a -f
            docker-compose pull spring-app-develop
            docker-compose up -d spring-app-develop
          EOF

          rm /tmp/ssh_key
